# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Form/'
            - '../src/Repository/'
            - '../src/Repository/Exception/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\EventListener\OnReservationRetrievalListener:
        arguments:
            - '@App\Dto\Transformer\Request\ReservationRequestDtoTransformer'
            - '@App\Service\ApiClient'
            - '@Psr\Log\LoggerInterface'
            - '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: 'onKernelTerminate' }

    App\EventListener\OnReservationCreationListener:
        arguments:
            - '@App\Service\ApiClient'
            - '@Doctrine\ORM\EntityManagerInterface'
            - '@App\Dto\Transformer\Request\ReservationRequestDtoTransformer'
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: 'onKernelTerminate' }

    App\EventSubscriber\ReservationSubscriber:
        arguments:
            - '@App\Service\ReservationStorage'
        tags:
            - { name: doctrine.event_subscriber }
